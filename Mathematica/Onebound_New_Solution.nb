(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     42602,        784]
NotebookOptionsPosition[     41787,        752]
NotebookOutlinePosition[     42124,        767]
CellTagsIndexPosition[     42081,        764]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6621067998224163`*^9, 3.6621068307192287`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", "   ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "AA", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "EE", ",", 
       " ", "FF", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "AA", ",", " ", "BB", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "GG", ",", " ", "HH", ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "AA", ",", " ", "BB", ",", " ", "CC", ",", " ", "0", ",", " ", "0", ",",
        " ", "0", ",", " ", "II", ",", " ", "JJ"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "AA", ",", " ", "BB", ",", " ", "CC", ",", " ", "DD", ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "KK"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "LL", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", " ", "PP", ",", 
       " ", "QQ", ",", " ", "0", ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "LL", ",", " ", "MM", ",", " ", "0", ",", " ", "0", ",", " ", "0", ",", 
       " ", "RR", ",", " ", "SS", ",", " ", "0"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "LL", ",", " ", "MM", ",", " ", "NN", ",", " ", "0", ",", " ", "0", ",",
        " ", "0", ",", " ", "TT", ",", " ", "UU"}], "}"}], ",", 
     "\[IndentingNewLine]", "       ", 
     RowBox[{"{", 
      RowBox[{
      "LL", ",", " ", "MM", ",", " ", "NN", ",", " ", "OO", ",", " ", "0", 
       ",", " ", "0", ",", " ", "0", ",", " ", "VV"}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"X", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "X1", ",", " ", "X2", ",", " ", "X3", ",", " ", "X4", ",", " ", "X5", ",",
      " ", "X6", ",", " ", "X7", ",", " ", "X8"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6569416178687487`*^9, 3.656941820981436*^9}, {
   3.656941877038568*^9, 3.656942023535441*^9}, {3.656942101547607*^9, 
   3.6569421049084063`*^9}, {3.661957752724674*^9, 3.661957753011133*^9}, 
   3.663601612159568*^9, {3.663602110222822*^9, 3.663602132954121*^9}, {
   3.663602414623946*^9, 3.663602467296089*^9}, {3.663602528165567*^9, 
   3.663602649401771*^9}, {3.6636027695102243`*^9, 3.663602770562108*^9}, {
   3.663603060321084*^9, 3.663603110097969*^9}, {3.663604051338892*^9, 
   3.663604083843937*^9}, {3.663604144000749*^9, 3.663604149216453*^9}, {
   3.663604194840556*^9, 3.6636042194875*^9}, {3.6636269015587473`*^9, 
   3.663626972909439*^9}, {3.671921000795124*^9, 3.671921042913642*^9}, {
   3.671921907075162*^9, 3.671922055889401*^9}, {3.671922095456477*^9, 
   3.671922182469603*^9}, {3.681346810832279*^9, 3.68134699389713*^9}, {
   3.6813470568636837`*^9, 3.681347073599859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"sol", " ", "=", " ", 
   RowBox[{"LinearSolve", "[", 
    RowBox[{"A", ",", "X"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6569420435353117`*^9, 3.6569420556532793`*^9}, {
   3.656942110412026*^9, 3.6569177544087*^9}, {3.656917786377181*^9, 
   3.656917804092094*^9}, {3.656918183474106*^9, 3.6569181906673317`*^9}, {
   3.656923777967198*^9, 3.656923784335791*^9}, {3.656924166520013*^9, 
   3.656924168504587*^9}, {3.657318950187941*^9, 3.657318950693522*^9}, 
   3.661959136631723*^9, {3.662107424349469*^9, 3.662107430140978*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Tbbdot", " ", "=", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tbmdot", " ", "=", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tumdot", " ", "=", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "3", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Tubdot", " ", "=", " ", 
   RowBox[{"sol", "[", 
    RowBox[{"[", "4", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",\

 CellChangeTimes->{{3.657318957649362*^9, 3.6573189899973803`*^9}, {
  3.657320832102614*^9, 3.657320854405822*^9}, {3.661145192575598*^9, 
  3.66114522292105*^9}, {3.661145619527684*^9, 3.6611456206216908`*^9}, {
  3.661234244588949*^9, 3.661234250429929*^9}, {3.66195774696259*^9, 
  3.661957749074325*^9}, {3.6619577946863623`*^9, 3.6619578818394747`*^9}, {
  3.662107280349533*^9, 3.662107298545525*^9}, {3.662107409301261*^9, 
  3.662107416830472*^9}, {3.662107650818408*^9, 3.6621076577496443`*^9}, {
  3.671922210044297*^9, 3.671922250351308*^9}, {3.681347127544423*^9, 
  3.6813471889999323`*^9}, {3.681347362112442*^9, 3.681347366192013*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "Tbbdot", "]"}]], "Input",
 CellChangeTimes->{{3.681347370772615*^9, 3.681347397832046*^9}, {
  3.681348061698717*^9, 3.681348070720538*^9}}],

Cell["\<\
(-(GG*II*MM*NN*PP*X1) + CC*HH*MM*PP*RR*X1 - BB*HH*NN*PP*RR*X1 + \
BB*II*NN*PP*RR*X1 - CC*GG*MM*PP*SS*X1 + BB*GG*NN*PP*SS*X1 + CC*GG*MM*PP*TT*X1 \
- BB*CC*PP*RR*TT*X1 + FF*II*MM*NN*PP*X2 - 
      EE*II*MM*NN*QQ*X2 + CC*FF*MM*PP*SS*X2 - BB*FF*NN*PP*SS*X2 - \
CC*EE*MM*QQ*SS*X2 + BB*EE*NN*QQ*SS*X2 - CC*FF*MM*PP*TT*X2 + CC*EE*MM*QQ*TT*X2 \
- FF*HH*MM*NN*PP*X3 + EE*HH*MM*NN*QQ*X3 + 
      BB*FF*NN*PP*SS*X3 - BB*EE*NN*QQ*SS*X3 + EE*GG*II*MM*NN*X5 - \
CC*EE*HH*MM*RR*X5 + BB*EE*HH*NN*RR*X5 - BB*EE*II*NN*RR*X5 + CC*EE*GG*MM*SS*X5 \
- BB*EE*GG*NN*SS*X5 - CC*EE*GG*MM*TT*X5 + 
      BB*CC*EE*RR*TT*X5 - CC*FF*HH*MM*PP*X6 + BB*FF*HH*NN*PP*X6 - \
BB*FF*II*NN*PP*X6 + CC*EE*HH*MM*QQ*X6 - BB*EE*HH*NN*QQ*X6 + BB*EE*II*NN*QQ*X6 \
+ BB*CC*FF*PP*TT*X6 - BB*CC*EE*QQ*TT*X6 + 
      CC*FF*HH*MM*PP*X7 - CC*EE*HH*MM*QQ*X7 - BB*CC*FF*PP*SS*X7 + \
BB*CC*EE*QQ*SS*X7)/
    (EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
      AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
      BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
      AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT) - 
   ((FF*PP - EE*QQ)*(HH*MM - BB*SS)*(JJ*NN - \
CC*UU)*(-(((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*
              (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (-(((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - \

                  (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*
                (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                  (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
             (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*NN*X2 + Power(AA,4)*Power(BB,2)*NN*X3 - 
                   Power(AA,4)*Power(BB,2)*CC*X7)))) + (-((-(EE*LL) + \
AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (-(((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + AA*QQ))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
           (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (-((Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(LL*X1) + AA*X5)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,5)*Power(BB,3)*CC*DD*LL*X1 - \
Power(AA,6)*Power(BB,2)*CC*DD*MM*X1 + Power(AA,6)*Power(BB,2)*CC*DD*MM*X2 - \
Power(AA,6)*Power(BB,3)*DD*NN*X2 + 
                 Power(AA,6)*Power(BB,3)*DD*NN*X3 - \
Power(AA,6)*Power(BB,3)*CC*OO*X3 + Power(AA,6)*Power(BB,3)*CC*OO*X4 - \
Power(AA,6)*Power(BB,3)*CC*DD*X8)))))/
    ((-(EE*GG*II*LL*MM*NN) - BB*FF*HH*LL*NN*PP + BB*FF*II*LL*NN*PP + \
AA*FF*HH*MM*NN*PP - AA*FF*II*MM*NN*PP + AA*GG*II*MM*NN*PP + BB*EE*HH*LL*NN*QQ \
- BB*EE*II*LL*NN*QQ - AA*EE*HH*MM*NN*QQ + 
        AA*EE*II*MM*NN*QQ + CC*EE*HH*LL*MM*RR - BB*EE*HH*LL*NN*RR + \
BB*EE*II*LL*NN*RR - AA*CC*HH*MM*PP*RR + AA*BB*HH*NN*PP*RR - AA*BB*II*NN*PP*RR \
- CC*EE*GG*LL*MM*SS + BB*EE*GG*LL*NN*SS + 
        BB*CC*FF*LL*PP*SS - AA*CC*FF*MM*PP*SS + AA*CC*GG*MM*PP*SS - \
AA*BB*GG*NN*PP*SS - BB*CC*EE*LL*QQ*SS + AA*CC*EE*MM*QQ*SS + CC*EE*GG*LL*MM*TT \
- BB*CC*FF*LL*PP*TT + AA*CC*FF*MM*PP*TT - 
        AA*CC*GG*MM*PP*TT + BB*CC*EE*LL*QQ*TT - AA*CC*EE*MM*QQ*TT - \
BB*CC*EE*LL*RR*TT + AA*BB*CC*PP*RR*TT)*
      (-((-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
             (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
           ((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (Power(AA,4)*Power(BB,2)*JJ*NN - Power(AA,4)*Power(BB,2)*CC*UU)) + \
(-(EE*LL) + AA*PP)*
         (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
           (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
         (-((-(EE*LL) + AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - \
Power(AA,4)*BB*CC*FF*MM + Power(AA,4)*BB*CC*GG*MM - \
Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (Power(AA,6)*Power(BB,3)*DD*JJ*NN - Power(AA,6)*Power(BB,3)*CC*JJ*OO \
+ Power(AA,6)*Power(BB,3)*CC*KK*OO - Power(AA,6)*Power(BB,3)*CC*DD*VV)))\
\>", "Output",
 CellChangeTimes->{3.681348116425818*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "Tbmdot", "]"}]], "Input",
 CellChangeTimes->{{3.6813480756246634`*^9, 3.6813480762967663`*^9}}],

Cell["\<\
(GG*II*LL*NN*PP*X1 - CC*HH*LL*PP*RR*X1 + AA*HH*NN*PP*RR*X1 - \
AA*II*NN*PP*RR*X1 + CC*GG*LL*PP*SS*X1 - AA*GG*NN*PP*SS*X1 - CC*GG*LL*PP*TT*X1 \
+ AA*CC*PP*RR*TT*X1 - FF*II*LL*NN*PP*X2 + 
      EE*II*LL*NN*QQ*X2 - EE*II*LL*NN*RR*X2 + AA*II*NN*PP*RR*X2 - \
CC*FF*LL*PP*SS*X2 + AA*FF*NN*PP*SS*X2 + CC*EE*LL*QQ*SS*X2 - AA*EE*NN*QQ*SS*X2 \
+ CC*FF*LL*PP*TT*X2 - CC*EE*LL*QQ*TT*X2 + 
      CC*EE*LL*RR*TT*X2 - AA*CC*PP*RR*TT*X2 + FF*HH*LL*NN*PP*X3 - \
EE*HH*LL*NN*QQ*X3 + EE*HH*LL*NN*RR*X3 - AA*HH*NN*PP*RR*X3 - EE*GG*LL*NN*SS*X3 \
- AA*FF*NN*PP*SS*X3 + AA*GG*NN*PP*SS*X3 + 
      AA*EE*NN*QQ*SS*X3 - EE*GG*II*LL*NN*X5 + CC*EE*HH*LL*RR*X5 - \
AA*EE*HH*NN*RR*X5 + AA*EE*II*NN*RR*X5 - CC*EE*GG*LL*SS*X5 + AA*EE*GG*NN*SS*X5 \
+ CC*EE*GG*LL*TT*X5 - AA*CC*EE*RR*TT*X5 + 
      EE*GG*II*LL*NN*X6 + CC*FF*HH*LL*PP*X6 - AA*FF*HH*NN*PP*X6 + \
AA*FF*II*NN*PP*X6 - AA*GG*II*NN*PP*X6 - CC*EE*HH*LL*QQ*X6 + AA*EE*HH*NN*QQ*X6 \
- AA*EE*II*NN*QQ*X6 - CC*EE*GG*LL*TT*X6 - 
      AA*CC*FF*PP*TT*X6 + AA*CC*GG*PP*TT*X6 + AA*CC*EE*QQ*TT*X6 - \
CC*FF*HH*LL*PP*X7 + CC*EE*HH*LL*QQ*X7 - CC*EE*HH*LL*RR*X7 + AA*CC*HH*PP*RR*X7 \
+ CC*EE*GG*LL*SS*X7 + AA*CC*FF*PP*SS*X7 - 
      AA*CC*GG*PP*SS*X7 - AA*CC*EE*QQ*SS*X7)/
    (EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
      AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
      BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
      AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT) + 
   ((-(FF*HH*LL*PP) + EE*HH*LL*QQ - EE*HH*LL*RR + AA*HH*PP*RR + EE*GG*LL*SS + \
AA*FF*PP*SS - AA*GG*PP*SS - AA*EE*QQ*SS)*(JJ*NN - CC*UU)*
      (-(((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (-(((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - \

                  (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*
                (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                  (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
             (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*NN*X2 + Power(AA,4)*Power(BB,2)*NN*X3 - 
                   Power(AA,4)*Power(BB,2)*CC*X7)))) + (-((-(EE*LL) + \
AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (-(((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + AA*QQ))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
           (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (-((Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(LL*X1) + AA*X5)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,5)*Power(BB,3)*CC*DD*LL*X1 - \
Power(AA,6)*Power(BB,2)*CC*DD*MM*X1 + Power(AA,6)*Power(BB,2)*CC*DD*MM*X2 - \
Power(AA,6)*Power(BB,3)*DD*NN*X2 + 
                 Power(AA,6)*Power(BB,3)*DD*NN*X3 - \
Power(AA,6)*Power(BB,3)*CC*OO*X3 + Power(AA,6)*Power(BB,3)*CC*OO*X4 - \
Power(AA,6)*Power(BB,3)*CC*DD*X8)))))/
    ((EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
        AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
        BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
        AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT)*
      (-((-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
             (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
           ((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (Power(AA,4)*Power(BB,2)*JJ*NN - Power(AA,4)*Power(BB,2)*CC*UU)) + \
(-(EE*LL) + AA*PP)*
         (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
           (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
         (-((-(EE*LL) + AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - \
Power(AA,4)*BB*CC*FF*MM + Power(AA,4)*BB*CC*GG*MM - \
Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (Power(AA,6)*Power(BB,3)*DD*JJ*NN - Power(AA,6)*Power(BB,3)*CC*JJ*OO \
+ Power(AA,6)*Power(BB,3)*CC*KK*OO - Power(AA,6)*Power(BB,3)*CC*DD*VV)))\
\>", "Output",
 CellChangeTimes->{3.6813481164777822`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "Tumdot", "]"}]], "Input",
 CellChangeTimes->{{3.681348080288652*^9, 3.681348081424609*^9}}],

Cell["\<\
(-X2 + X3)/CC + (GG*(-(BB*LL*PP*X1) + AA*MM*PP*X1 + EE*LL*MM*X2 - AA*MM*PP*X2 \
+ BB*EE*LL*X5 - AA*EE*MM*X5 - BB*EE*LL*X6 + AA*BB*PP*X6))/
    (CC*(EE*GG*LL*MM - BB*FF*LL*PP + AA*FF*MM*PP - AA*GG*MM*PP + BB*EE*LL*QQ \
- AA*EE*MM*QQ - BB*EE*LL*RR + AA*BB*PP*RR)) - 
   (((-HH + II)/CC - (GG*(EE*LL - AA*PP)*(-(HH*MM) + BB*SS))/(CC*(EE*GG*LL*MM \
- BB*FF*LL*PP + AA*FF*MM*PP - AA*GG*MM*PP + BB*EE*LL*QQ - AA*EE*MM*QQ - \
BB*EE*LL*RR + AA*BB*PP*RR)))*
      (-(BB*GG*LL*NN*PP*X1) + AA*GG*MM*NN*PP*X1 + BB*CC*LL*PP*RR*X1 - \
AA*CC*MM*PP*RR*X1 + BB*FF*LL*NN*PP*X2 - AA*FF*MM*NN*PP*X2 - BB*EE*LL*NN*QQ*X2 \
+ AA*EE*MM*NN*QQ*X2 - CC*EE*LL*MM*RR*X2 + 
        BB*EE*LL*NN*RR*X2 + AA*CC*MM*PP*RR*X2 - AA*BB*NN*PP*RR*X2 + \
EE*GG*LL*MM*NN*X3 - BB*FF*LL*NN*PP*X3 + AA*FF*MM*NN*PP*X3 - AA*GG*MM*NN*PP*X3 \
+ BB*EE*LL*NN*QQ*X3 - AA*EE*MM*NN*QQ*X3 - 
        BB*EE*LL*NN*RR*X3 + AA*BB*NN*PP*RR*X3 + BB*EE*GG*LL*NN*X5 - \
AA*EE*GG*MM*NN*X5 - BB*CC*EE*LL*RR*X5 + AA*CC*EE*MM*RR*X5 + CC*EE*GG*LL*MM*X6 \
- BB*EE*GG*LL*NN*X6 - BB*CC*FF*LL*PP*X6 + 
        AA*CC*FF*MM*PP*X6 - AA*CC*GG*MM*PP*X6 + AA*BB*GG*NN*PP*X6 + \
BB*CC*EE*LL*QQ*X6 - AA*CC*EE*MM*QQ*X6 - CC*EE*GG*LL*MM*X7 + BB*CC*FF*LL*PP*X7 \
- AA*CC*FF*MM*PP*X7 + AA*CC*GG*MM*PP*X7 - 
        BB*CC*EE*LL*QQ*X7 + AA*CC*EE*MM*QQ*X7 + BB*CC*EE*LL*RR*X7 - \
AA*BB*CC*PP*RR*X7))/
    (EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
      AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
      BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
      AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT) - 
   ((JJ/CC + ((EE*GG*LL*MM - BB*FF*LL*PP + AA*FF*MM*PP - AA*GG*MM*PP + \
BB*EE*LL*QQ - AA*EE*MM*QQ - BB*EE*LL*RR + AA*BB*PP*RR)*
           ((-HH + II)/CC - (GG*(EE*LL - AA*PP)*(-(HH*MM) + \
BB*SS))/(CC*(EE*GG*LL*MM - BB*FF*LL*PP + AA*FF*MM*PP - AA*GG*MM*PP + \
BB*EE*LL*QQ - AA*EE*MM*QQ - BB*EE*LL*RR + AA*BB*PP*RR)))*
           (-(JJ*NN) + CC*UU))/(EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - \
BB*FF*II*LL*NN*PP - AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP \
- BB*EE*HH*LL*NN*QQ + BB*EE*II*LL*NN*QQ + 
           AA*EE*HH*MM*NN*QQ - AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + \
BB*EE*HH*LL*NN*RR - BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR \
+ AA*BB*II*NN*PP*RR + CC*EE*GG*LL*MM*SS - 
           BB*EE*GG*LL*NN*SS - BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - \
AA*CC*GG*MM*PP*SS + AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS \
- CC*EE*GG*LL*MM*TT + BB*CC*FF*LL*PP*TT - 
           AA*CC*FF*MM*PP*TT + AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + \
AA*CC*EE*MM*QQ*TT + BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT))*
      (-(((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (-(((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - \

                  (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*
                (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                  (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
             (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*NN*X2 + Power(AA,4)*Power(BB,2)*NN*X3 - 
                   Power(AA,4)*Power(BB,2)*CC*X7)))) + (-((-(EE*LL) + \
AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (-(((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + AA*QQ))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
           (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (-((Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(LL*X1) + AA*X5)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,5)*Power(BB,3)*CC*DD*LL*X1 - \
Power(AA,6)*Power(BB,2)*CC*DD*MM*X1 + Power(AA,6)*Power(BB,2)*CC*DD*MM*X2 - \
Power(AA,6)*Power(BB,3)*DD*NN*X2 + 
                 Power(AA,6)*Power(BB,3)*DD*NN*X3 - \
Power(AA,6)*Power(BB,3)*CC*OO*X3 + Power(AA,6)*Power(BB,3)*CC*OO*X4 - \
Power(AA,6)*Power(BB,3)*CC*DD*X8)))))/
    (-((-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
           (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
         ((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
            (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
           (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
               (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
         (Power(AA,4)*Power(BB,2)*JJ*NN - Power(AA,4)*Power(BB,2)*CC*UU)) + \
(-(EE*LL) + AA*PP)*
       (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
         (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
       (-((-(EE*LL) + AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - \
Power(AA,4)*BB*CC*FF*MM + Power(AA,4)*BB*CC*GG*MM - \
Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - 
              (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
         (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
            (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
          (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
       (Power(AA,6)*Power(BB,3)*DD*JJ*NN - Power(AA,6)*Power(BB,3)*CC*JJ*OO + \
Power(AA,6)*Power(BB,3)*CC*KK*OO - Power(AA,6)*Power(BB,3)*CC*DD*VV))\
\>", "Output",
 CellChangeTimes->{3.681348116527616*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CForm", "[", "Tubdot", "]"}]], "Input"],

Cell["\<\
(-X3 + X4)/DD + (II*(-(BB*GG*LL*NN*PP*X1) + AA*GG*MM*NN*PP*X1 + \
BB*CC*LL*PP*RR*X1 - AA*CC*MM*PP*RR*X1 + BB*FF*LL*NN*PP*X2 - AA*FF*MM*NN*PP*X2 \
- BB*EE*LL*NN*QQ*X2 + AA*EE*MM*NN*QQ*X2 - 
        CC*EE*LL*MM*RR*X2 + BB*EE*LL*NN*RR*X2 + AA*CC*MM*PP*RR*X2 - \
AA*BB*NN*PP*RR*X2 + EE*GG*LL*MM*NN*X3 - BB*FF*LL*NN*PP*X3 + AA*FF*MM*NN*PP*X3 \
- AA*GG*MM*NN*PP*X3 + BB*EE*LL*NN*QQ*X3 - 
        AA*EE*MM*NN*QQ*X3 - BB*EE*LL*NN*RR*X3 + AA*BB*NN*PP*RR*X3 + \
BB*EE*GG*LL*NN*X5 - AA*EE*GG*MM*NN*X5 - BB*CC*EE*LL*RR*X5 + AA*CC*EE*MM*RR*X5 \
+ CC*EE*GG*LL*MM*X6 - BB*EE*GG*LL*NN*X6 - 
        BB*CC*FF*LL*PP*X6 + AA*CC*FF*MM*PP*X6 - AA*CC*GG*MM*PP*X6 + \
AA*BB*GG*NN*PP*X6 + BB*CC*EE*LL*QQ*X6 - AA*CC*EE*MM*QQ*X6 - CC*EE*GG*LL*MM*X7 \
+ BB*CC*FF*LL*PP*X7 - AA*CC*FF*MM*PP*X7 + 
        AA*CC*GG*MM*PP*X7 - BB*CC*EE*LL*QQ*X7 + AA*CC*EE*MM*QQ*X7 + \
BB*CC*EE*LL*RR*X7 - AA*BB*CC*PP*RR*X7))/
    (DD*(EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
        AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
        BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
        AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT)) - 
   (((-JJ + KK)/DD - (II*(EE*GG*LL*MM - BB*FF*LL*PP + AA*FF*MM*PP - \
AA*GG*MM*PP + BB*EE*LL*QQ - AA*EE*MM*QQ - BB*EE*LL*RR + \
AA*BB*PP*RR)*(-(JJ*NN) + CC*UU))/
         (DD*(EE*GG*II*LL*MM*NN + BB*FF*HH*LL*NN*PP - BB*FF*II*LL*NN*PP - \
AA*FF*HH*MM*NN*PP + AA*FF*II*MM*NN*PP - AA*GG*II*MM*NN*PP - BB*EE*HH*LL*NN*QQ \
+ BB*EE*II*LL*NN*QQ + AA*EE*HH*MM*NN*QQ - 
             AA*EE*II*MM*NN*QQ - CC*EE*HH*LL*MM*RR + BB*EE*HH*LL*NN*RR - \
BB*EE*II*LL*NN*RR + AA*CC*HH*MM*PP*RR - AA*BB*HH*NN*PP*RR + AA*BB*II*NN*PP*RR \
+ CC*EE*GG*LL*MM*SS - BB*EE*GG*LL*NN*SS - 
             BB*CC*FF*LL*PP*SS + AA*CC*FF*MM*PP*SS - AA*CC*GG*MM*PP*SS + \
AA*BB*GG*NN*PP*SS + BB*CC*EE*LL*QQ*SS - AA*CC*EE*MM*QQ*SS - CC*EE*GG*LL*MM*TT \
+ BB*CC*FF*LL*PP*TT - AA*CC*FF*MM*PP*TT + 
             AA*CC*GG*MM*PP*TT - BB*CC*EE*LL*QQ*TT + AA*CC*EE*MM*QQ*TT + \
BB*CC*EE*LL*RR*TT - AA*BB*CC*PP*RR*TT)))*
      (-(((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
             (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
           (-(((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - \

                  (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*
                (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                  (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
             (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*NN*X2 + Power(AA,4)*Power(BB,2)*NN*X3 - 
                   Power(AA,4)*Power(BB,2)*CC*X7)))) + (-((-(EE*LL) + \
AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - Power(AA,4)*BB*CC*FF*MM + \
Power(AA,4)*BB*CC*GG*MM - Power(AA,4)*Power(BB,2)*GG*NN)*
                 (-(EE*LL) + AA*PP) - (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
           (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
         (-(((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*(-(EE*LL) + AA*PP) - 
                (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + AA*QQ))*
              (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(LL*X1) + AA*X5)) + 
                (-(EE*LL) + AA*PP)*(Power(AA,3)*Power(BB,2)*CC*LL*X1 - \
Power(AA,4)*BB*CC*MM*X1 + Power(AA,4)*BB*CC*MM*X2 - \
Power(AA,4)*Power(BB,2)*CC*X6))) + 
           (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
            (-((Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(LL*X1) + AA*X5)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,5)*Power(BB,3)*CC*DD*LL*X1 - \
Power(AA,6)*Power(BB,2)*CC*DD*MM*X1 + Power(AA,6)*Power(BB,2)*CC*DD*MM*X2 - \
Power(AA,6)*Power(BB,3)*DD*NN*X2 + 
                 Power(AA,6)*Power(BB,3)*DD*NN*X3 - \
Power(AA,6)*Power(BB,3)*CC*OO*X3 + Power(AA,6)*Power(BB,3)*CC*OO*X4 - \
Power(AA,6)*Power(BB,3)*CC*DD*X8)))))/
    (-((-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
           (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
         ((Power(AA,6)*Power(BB,2)*CC*DD*HH*MM - \
Power(AA,6)*Power(BB,3)*DD*HH*NN + Power(AA,6)*Power(BB,3)*DD*II*NN - \
Power(AA,6)*Power(BB,3)*CC*II*OO)*(-(EE*LL) + AA*PP)*
            (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
              (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR))) - 
           (-(EE*LL) + AA*PP)*((Power(AA,5)*Power(BB,3)*CC*DD*FF*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*FF*MM + Power(AA,6)*Power(BB,2)*CC*DD*GG*MM - \
Power(AA,6)*Power(BB,3)*DD*GG*NN)*
               (-(EE*LL) + AA*PP) - (Power(AA,5)*Power(BB,3)*CC*DD*EE*LL - \
Power(AA,6)*Power(BB,2)*CC*DD*EE*MM)*(-(FF*LL) + \
AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*CC*SS))*
         (Power(AA,4)*Power(BB,2)*JJ*NN - Power(AA,4)*Power(BB,2)*CC*UU)) + \
(-(EE*LL) + AA*PP)*
       (-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
         (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
       (-((-(EE*LL) + AA*PP)*((Power(AA,3)*Power(BB,2)*CC*FF*LL - \
Power(AA,4)*BB*CC*FF*MM + Power(AA,4)*BB*CC*GG*MM - \
Power(AA,4)*Power(BB,2)*GG*NN)*(-(EE*LL) + AA*PP) - 
              (Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ))*(Power(AA,4)*BB*CC*HH*MM - \
Power(AA,4)*Power(BB,2)*CC*SS)) + 
         (-(EE*LL) + AA*PP)*(-((Power(AA,3)*Power(BB,2)*CC*EE*LL - \
Power(AA,4)*BB*CC*EE*MM)*(-(FF*LL) + AA*QQ)) + 
            (-(EE*LL) + AA*PP)*(Power(AA,4)*BB*CC*GG*MM - \
Power(AA,2)*BB*CC*(-(AA*BB*FF*LL) + Power(AA,2)*FF*MM + Power(AA,2)*BB*RR)))*
          (Power(AA,4)*BB*CC*HH*MM - Power(AA,4)*Power(BB,2)*HH*NN + \
Power(AA,4)*Power(BB,2)*II*NN - Power(AA,4)*Power(BB,2)*CC*TT))*
       (Power(AA,6)*Power(BB,3)*DD*JJ*NN - Power(AA,6)*Power(BB,3)*CC*JJ*OO + \
Power(AA,6)*Power(BB,3)*CC*KK*OO - Power(AA,6)*Power(BB,3)*CC*DD*VV))\
\>", "Output",
 CellChangeTimes->{3.681348116579856*^9}]
}, Open  ]]
},
WindowSize->{1916, 1058},
WindowMargins->{{Automatic, 4}, {4, Automatic}},
FrontEndVersion->"10.0 for Linux x86 (64-bit) (December 4, 2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 146, 2, 32, "Input"],
Cell[707, 24, 3007, 63, 231, "Input"],
Cell[3717, 89, 577, 10, 32, "Input"],
Cell[4297, 101, 1234, 26, 121, "Input"],
Cell[CellGroupData[{
Cell[5556, 131, 178, 3, 32, "Input"],
Cell[5737, 136, 8571, 142, 1034, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14345, 283, 133, 2, 32, "Input"],
Cell[14481, 287, 8997, 148, 1088, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23515, 440, 129, 2, 32, "Input"],
Cell[23647, 444, 9307, 153, 1124, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32991, 602, 63, 1, 32, "Input"],
Cell[33057, 605, 8714, 144, 1052, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
